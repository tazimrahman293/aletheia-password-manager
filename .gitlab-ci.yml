# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

build:
  stage: build
  rules:
    - changes:
        - web/*
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_PIPELINE_SOURCE == 'push'
  before_script:
    - apt update && apt -y install make autoconf libssl-dev
  allow_failure: false
  script:
    - make -j all
  artifacts:
    name: aletheia
    paths:
      - build/apps/aletheia-linux
  cache:
    paths:
      - build/objects/src/*.o
      - build/objects/src/**/*.o
      - build/objects/src/*.d
      - build/objects/src/**/*.d

# run tests using the binary built before
test:
  stage: test
  rules:
    - changes:
      - web/*
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_PIPELINE_SOURCE == 'push'
  allow_failure: false
  script:
    - make -j test
  artifacts:
    reports:
      junit: build/coverage/test_results.xml
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - build/objects/test/*.o
      - build/objects/test/**/*.o
      - build/objects/test/*.d
      - build/objects/test/**/*.d

cover:
  stage: test
  needs:
    - job: test
      artifacts: true
  rules:
    - changes:
      - web/*
      when: never
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_REF_NAME == 'main'
  before_script:
    - apt update && apt -y install lcov
  allow_failure: true
  script:
    - make -j coverage
    - make print-coverage
  artifacts:
    name: coverage_static
    paths:
      - build/coverage/
  coverage: /Total:\|(\d+\.?\d+\%)/
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - build/objects/test/*.o
      - build/objects/test/**/*.o
      - build/objects/test/*.d
      - build/objects/test/**/*.d
